// AUTOGENERATED: DO NOT EDIT!
// Built from RISC-V ISA opcode definitions: https://github.com/riscv/riscv-opcodes

package assemble

import "github.com/hawkowl/biscuit/pkg/opcodes"

{{ range .Opcodes -}}
type OP_{{ .Name }} struct {
	opcodes.OP_{{ .Name }}
}

func {{ .Name }}({{ range .Args -}}
		{{ index . 0 }} {{ index . 1 }},
	{{- end -}}) OP_{{ .Name }} {
	return OP_{{ .Name }}{
		opcodes.OP_{{ .Name }}{
		{{ range .Args -}}
			{{ index . 0 }}: {{ index . 0 }},
		{{ end -}}
		},
	}
}



func (o OP_{{.Name}}) Encode() (r uint32, err error) {
{{ range .Fields -}}
    {{ index . 0 }}, err := GEN_{{ index . 0 }}(o.{{ index . 1 }})
	if err != nil {
		return
	}
{{ end }}

	r = r 
	{{- range .Fields -}}
	| {{ index . 0 }}
{{- end -}}
	{{- range .Bitfields -}}
		| ({{ index . 2 }}
		{{- if index . 1 | ne "0" -}}
			<< {{ index . 1 }}
		{{- end -}})
	{{- end }}
	return
}

{{ end -}}