// Built from RISC-V ISA opcode definitions: https://github.com/riscv/riscv-opcodes

package disassemble

import (
    "fmt"
    "github.com/hawkowl/biscuit/pkg/opcodes"
    "github.com/hawkowl/biscuit/pkg/debuginfo"
    "github.com/hawkowl/biscuit/pkg/common"
)

{{ range .Opcodes -}}
type OP_{{ .Name }} struct {
	opcodes.OP_{{ .Name }}
    debug debuginfo.DebugInfo
}

func (o OP_{{ .Name }}) Describe() string {
    return "{{ .Name }}"
}

func (o OP_{{ .Name }}) Opcode() opcodes.Opcode {
    return o.OP_{{ .Name }}
}

func (o OP_{{ .Name }}) DebugInfo() debuginfo.DebugInfo {
    return o.debug
}

func {{ .Name }}({{ range .Args -}}
		{{ index . 0 }} {{ index . 1 }},
	{{- end -}} debug debuginfo.DebugInfo) OP_{{ .Name }} {

	return OP_{{ .Name }}{
		OP_{{ .Name }}: opcodes.OP_{{ .Name }}{
		{{ range .Args -}}
			{{ index . 0 }}: {{ index . 0 }},
		{{ end -}}
		},
        debug: debug,
	}
}

func Decode{{ .Name }}(inst uint32) OP_{{ .Name }} {
    r := opcodes.OP_{{ .Name }}{}

    {{ range .Fields -}}
        {{ if index . 0 | eq "IMM12LO" }}
        {{ else if index . 0 | eq "IMM12HI" }}
            r.{{ index . 1 }} = DEC_{{ index . 1 }}HILO(inst)
        {{ else -}}
            r.{{ index . 1 }} = DEC_{{ index . 1 }}(inst)
        {{ end -}}
    {{ end -}}

    return OP_{{.Name}}{
        OP_{{ .Name }}: r,
    }
}

{{ end -}}