// AUTOGENERATED: DO NOT EDIT!
// Built from RISC-V ISA opcode definitions: https://github.com/riscv/riscv-opcodes

package disassemble

import (
    "fmt"
    "strings"

    "github.com/hawkowl/biscuit/pkg/opcodes"
    "github.com/hawkowl/biscuit/pkg/debuginfo"
)

{{ range $opcode := .Opcodes -}}
type OP_{{ $opcode.Name }} struct {
	opcodes.OP_{{ $opcode.Name }}
    debug debuginfo.DebugInfo
}

var _ fmt.Stringer = OP_{{ $opcode.Name }}{}

func (o OP_{{ $opcode.Name }}) String() string {
    return strings.Join([]string{"{{ $opcode.Name }}" {{- range $x := .Args }}, o.{{ index $x 0 | lower }}(){{- end -}}}, " ")
}

{{ range $x := .Args }}
{{- with $name := index $x 0 -}}
{{- if eq $name "RS1" "RS2" "RD" -}}
func (o OP_{{ $opcode.Name }}) {{ lower $name }}() string {
    return fmt.Sprintf("{{ lower $name }}=x%d", o.{{ $name }})
}
{{- else -}}
func (o OP_{{ $opcode.Name }}) {{ lower $name }}() string {
    if o.{{ $name }} == 0 {
        return "{{ lower $name }}=0"
    } else {
        return fmt.Sprintf("{{ lower $name }}=%#x (%d)", uint64(o.{{ $name }}), o.{{ $name }})
    }
}
{{- end -}}
{{- end }}

{{ end -}}


func (o OP_{{ $opcode.Name }}) Opcode() opcodes.Opcode {
    return o.OP_{{ $opcode.Name }}
}

func (o OP_{{ $opcode.Name }}) DebugInfo() debuginfo.DebugInfo {
    return o.debug
}

func {{ $opcode.Name }}({{ range $opcode.Args -}}
		{{ index . 0 }} {{ index . 1 }},
	{{- end -}} debug debuginfo.DebugInfo) OP_{{ $opcode.Name }} {

	return OP_{{ $opcode.Name }}{
		OP_{{ $opcode.Name }}: opcodes.OP_{{ $opcode.Name }}{
		{{ range $opcode.Args -}}
			{{ index . 0 }}: {{ index . 0 }},
		{{ end -}}
		},
        debug: debug,
	}
}

func Decode{{ $opcode.Name }}(inst uint32) OP_{{ $opcode.Name }} {
    r := opcodes.OP_{{ $opcode.Name }}{}

    {{ range .Fields -}}
        {{ if index . 0 | eq "IMM12LO" }}
        {{ else if index . 0 | eq "IMM12HI" }}
            r.{{ index . 1 }} = DEC_{{ index . 1 }}HILO(inst)
        {{ else -}}
            r.{{ index . 1 }} = DEC_{{ index . 1 }}(inst)
        {{ end -}}
    {{ end -}}

    return OP_{{.Name}}{
        OP_{{ $opcode.Name }}: r,
    }
}

{{ end -}}
