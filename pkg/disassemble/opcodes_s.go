// AUTOGENERATED: DO NOT EDIT!
// Built from RISC-V ISA opcode definitions: https://github.com/riscv/riscv-opcodes

package disassemble

import "github.com/hawkowl/biscuit/pkg/opcodes"

type OP_SFENCE_VMA struct {
	opcodes.OP_SFENCE_VMA
}

func (o OP_SFENCE_VMA) Describe() string {
	return "SFENCE_VMA"
}

func (o OP_SFENCE_VMA) Opcode() opcodes.Opcode {
	return o.OP_SFENCE_VMA
}

func SFENCE_VMA(RS1 uint32, RS2 uint32, debug DebugInfo) OP_SFENCE_VMA {
	return OP_SFENCE_VMA{
		opcodes.OP_SFENCE_VMA{
			RS1: RS1,
			RS2: RS2,
		},
	}
}

func DecodeSFENCE_VMA(inst uint32) OP_SFENCE_VMA {
	r := opcodes.OP_SFENCE_VMA{}

	r.RS1 = DEC_RS1(inst)
	r.RS2 = DEC_RS2(inst)
	return OP_SFENCE_VMA{
		OP_SFENCE_VMA: r,
	}
}

type OP_SRET struct {
	opcodes.OP_SRET
}

func (o OP_SRET) Describe() string {
	return "SRET"
}

func (o OP_SRET) Opcode() opcodes.Opcode {
	return o.OP_SRET
}

func SRET(debug DebugInfo) OP_SRET {
	return OP_SRET{
		opcodes.OP_SRET{},
	}
}

func DecodeSRET(inst uint32) OP_SRET {
	r := opcodes.OP_SRET{}

	return OP_SRET{
		OP_SRET: r,
	}
}
