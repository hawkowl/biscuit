// AUTOGENERATED: DO NOT EDIT!
// Built from RISC-V ISA opcode definitions: https://github.com/riscv/riscv-opcodes

package disassemble

import (
	"fmt"
	"strings"

	"github.com/hawkowl/biscuit/pkg/debuginfo"
	"github.com/hawkowl/biscuit/pkg/opcodes"
)

type OP_FENCE_I struct {
	opcodes.OP_FENCE_I
	debug debuginfo.DebugInfo
}

var _ fmt.Stringer = OP_FENCE_I{}

func (o OP_FENCE_I) String() string {
	return strings.Join([]string{"FENCE_I", o.imm12(), o.rs1(), o.rd()}, " ")
}

func (o OP_FENCE_I) imm12() string {
	if o.IMM12 == 0 {
		return "imm12=0"
	} else {
		return fmt.Sprintf("imm12=%#x (%d)", uint64(o.IMM12), o.IMM12)
	}
}

func (o OP_FENCE_I) rs1() string {
	return fmt.Sprintf("rs1=x%d", o.RS1)
}

func (o OP_FENCE_I) rd() string {
	return fmt.Sprintf("rd=x%d", o.RD)
}

func (o OP_FENCE_I) Opcode() opcodes.Opcode {
	return o.OP_FENCE_I
}

func (o OP_FENCE_I) DebugInfo() debuginfo.DebugInfo {
	return o.debug
}

func FENCE_I(IMM12 int32, RS1 uint32, RD uint32, debug debuginfo.DebugInfo) OP_FENCE_I {

	return OP_FENCE_I{
		OP_FENCE_I: opcodes.OP_FENCE_I{
			IMM12: IMM12,
			RS1:   RS1,
			RD:    RD,
		},
		debug: debug,
	}
}

func DecodeFENCE_I(inst uint32) OP_FENCE_I {
	r := opcodes.OP_FENCE_I{}

	r.IMM12 = DEC_IMM12(inst)
	r.RS1 = DEC_RS1(inst)
	r.RD = DEC_RD(inst)
	return OP_FENCE_I{
		OP_FENCE_I: r,
	}
}
